openapi: 3.0.0
info:
  title: EL-PRO API
  description: EL-PRO API.
  version: 1.0.0
servers:
  - url: 'https://127.0.0.1/el-pro/api/0.0.1'
    description: Back end server
paths:
  '/task/details':
    get:
      tags:
        - TASK
      summary: タスク詳細獲得
      description: データベースからタスク詳細を獲得。
      parameters: 
        - name: タスク_id
          in: path
          description: タスクID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ユーザー情報を獲得成功
          content:
            application/json:
              schema:
                type: string
                format: json
                example:
                  result:
                    code: TASKDETAILSGET200
                    message: Success
                  taskdetails:
                    acquirer: '蔡徐坤'
                    employee_number: '0001'
                    certification: '基本情報技術者試験'
                    acquisition_date: '2022-05-12'
                    qualification_copy: 'image.jpg'
        '404':
          description: USER_IDが存在しない。
          content:
            application/json:
              schema:
                type: string
                format: json
                example:
                  result:
                    code: USERINFOGET404
                    message: USER Not Found.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
  
    post:
      tags:
        - TASK
      summary: タスク承認
      description: タスクの承認と拒否。
      parameters: []
      requestBody:
        description: タスクの承認と拒否
        content:
          application/json:
            schema:
              required:
                - approval
                - feedback
              properties:
                approval:
                  type: integer
                feedback:
                  type: string
            example:
              approval: 1
              feedback: '123456'
      responses:
        '200':
          description: タスクの承認と拒否が成功
          content:
            application/json:
              schema:
                type: string
                format: json
                example:
                  result:
                    code: TASKDETAILSPOST200
                    message: Success
        '400':
          description: タスクの承認と拒否が失敗
          content:
            application/json:
              schema:
                type: string
                format: json
                example:
                  result:
                    code: TASKDETAILSPOST400
                    message: Post task details is failure.
        '500':
          description: 予期せぬエラー
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'

components:
  schemas:
    Result:
      type: object
      required:
        - code
        - massage
      properties:
        result:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
          example:
            code: 'XXX999(XX:機能分類コード)'
            message: unexpected error.
